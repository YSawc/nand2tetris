// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
	Not(in=sel[0], out=NotSel_000_0);
	Not(in=sel[1], out=NotSel_000_1);
	Not(in=sel[2], out=NotSel_000_2);
	Not(in=sel[1], out=NotSel_001_1);
	Not(in=sel[2], out=NotSel_001_2);
	Not(in=sel[0], out=NotSel_010_0);
	Not(in=sel[2], out=NotSel_010_2);
	Not(in=sel[2], out=NotSel_011_2);
	Not(in=sel[0], out=NotSel_100_0);
	Not(in=sel[1], out=NotSel_100_1);
	Not(in=sel[1], out=NotSel_101_1);
	Not(in=sel[0], out=NotSel_110_0);
	And(a=NotSel_000_0, b=NotSel_000_1, out=And_000_0);
	And(a=sel[0], b=NotSel_001_1, out=And_001_0);
	And(a=NotSel_010_0, b=sel[1], out=And_010_0);
	And(a=sel[0], b=sel[1], out=And_011_0);
	And(a=NotSel_100_0, b=NotSel_100_1, out=And_100_0);
	And(a=sel[0], b=NotSel_101_1, out=And_101_0);
	And(a=NotSel_110_0, b=sel[1], out=And_110_0);
	And(a=sel[0], b=sel[1], out=And_111_0);
	And(a=And_000_0, b=NotSel_000_2, out=And_000_1);
	And(a=And_001_0, b=NotSel_001_2, out=And_001_1);
	And(a=And_010_0, b=NotSel_010_2, out=And_010_1);
	And(a=And_011_0, b=NotSel_011_2, out=And_011_1);
	And(a=And_100_0, b=sel[2], out=And_100_1);
	And(a=And_101_0, b=sel[2], out=And_101_1);
	And(a=And_110_0, b=sel[2], out=And_110_1);
	And(a=And_111_0, b=sel[2], out=And_110_1);
	And(a=a[0], b=And_000_1, out=aAndOut0);
	And(a=a[1], b=And_000_1, out=aAndOut1);
	And(a=a[2], b=And_000_1, out=aAndOut2);
	And(a=a[3], b=And_000_1, out=aAndOut3);
	And(a=a[4], b=And_000_1, out=aAndOut4);
	And(a=a[5], b=And_000_1, out=aAndOut5);
	And(a=a[6], b=And_000_1, out=aAndOut6);
	And(a=a[7], b=And_000_1, out=aAndOut7);
	And(a=a[8], b=And_000_1, out=aAndOut8);
	And(a=a[9], b=And_000_1, out=aAndOut9);
	And(a=a[10], b=And_000_1, out=aAndOut10);
	And(a=a[11], b=And_000_1, out=aAndOut11);
	And(a=a[12], b=And_000_1, out=aAndOut12);
	And(a=a[13], b=And_000_1, out=aAndOut13);
	And(a=a[14], b=And_000_1, out=aAndOut14);
	And(a=a[15], b=And_000_1, out=aAndOut15);
	And(a=b[0], b=And_001_1, out=bAndOut0);
	And(a=b[1], b=And_001_1, out=bAndOut1);
	And(a=b[2], b=And_001_1, out=bAndOut2);
	And(a=b[3], b=And_001_1, out=bAndOut3);
	And(a=b[4], b=And_001_1, out=bAndOut4);
	And(a=b[5], b=And_001_1, out=bAndOut5);
	And(a=b[6], b=And_001_1, out=bAndOut6);
	And(a=b[7], b=And_001_1, out=bAndOut7);
	And(a=b[8], b=And_001_1, out=bAndOut8);
	And(a=b[9], b=And_001_1, out=bAndOut9);
	And(a=b[10], b=And_001_1, out=bAndOut10);
	And(a=b[11], b=And_001_1, out=bAndOut11);
	And(a=b[12], b=And_001_1, out=bAndOut12);
	And(a=b[13], b=And_001_1, out=bAndOut13);
	And(a=b[14], b=And_001_1, out=bAndOut14);
	And(a=b[15], b=And_001_1, out=bAndOut15);
	And(a=c[0], b=And_010_1, out=cAndOut0);
	And(a=c[1], b=And_010_1, out=cAndOut1);
	And(a=c[2], b=And_010_1, out=cAndOut2);
	And(a=c[3], b=And_010_1, out=cAndOut3);
	And(a=c[4], b=And_010_1, out=cAndOut4);
	And(a=c[5], b=And_010_1, out=cAndOut5);
	And(a=c[6], b=And_010_1, out=cAndOut6);
	And(a=c[7], b=And_010_1, out=cAndOut7);
	And(a=c[8], b=And_010_1, out=cAndOut8);
	And(a=c[9], b=And_010_1, out=cAndOut9);
	And(a=c[10], b=And_010_1, out=cAndOut10);
	And(a=c[11], b=And_010_1, out=cAndOut11);
	And(a=c[12], b=And_010_1, out=cAndOut12);
	And(a=c[13], b=And_010_1, out=cAndOut13);
	And(a=c[14], b=And_010_1, out=cAndOut14);
	And(a=c[15], b=And_010_1, out=cAndOut15);
	And(a=d[0], b=And_011_1, out=dAndOut0);
	And(a=d[1], b=And_011_1, out=dAndOut1);
	And(a=d[2], b=And_011_1, out=dAndOut2);
	And(a=d[3], b=And_011_1, out=dAndOut3);
	And(a=d[4], b=And_011_1, out=dAndOut4);
	And(a=d[5], b=And_011_1, out=dAndOut5);
	And(a=d[6], b=And_011_1, out=dAndOut6);
	And(a=d[7], b=And_011_1, out=dAndOut7);
	And(a=d[8], b=And_011_1, out=dAndOut8);
	And(a=d[9], b=And_011_1, out=dAndOut9);
	And(a=d[10], b=And_011_1, out=dAndOut10);
	And(a=d[11], b=And_011_1, out=dAndOut11);
	And(a=d[12], b=And_011_1, out=dAndOut12);
	And(a=d[13], b=And_011_1, out=dAndOut13);
	And(a=d[14], b=And_011_1, out=dAndOut14);
	And(a=d[15], b=And_011_1, out=dAndOut15);
	And(a=e[15], b=And_100_1, out=eAndOut15);
	And(a=f[0], b=And_101_1, out=fAndOut0);
	And(a=f[1], b=And_101_1, out=fAndOut1);
	And(a=f[2], b=And_101_1, out=fAndOut2);
	And(a=f[3], b=And_101_1, out=fAndOut3);
	And(a=f[4], b=And_101_1, out=fAndOut4);
	And(a=f[5], b=And_101_1, out=fAndOut5);
	And(a=f[6], b=And_101_1, out=fAndOut6);
	And(a=f[7], b=And_101_1, out=fAndOut7);
	And(a=f[8], b=And_101_1, out=fAndOut8);
	And(a=f[9], b=And_101_1, out=fAndOut9);
	And(a=f[10], b=And_101_1, out=fAndOut10);
	And(a=f[11], b=And_101_1, out=fAndOut11);
	And(a=f[12], b=And_101_1, out=fAndOut12);
	And(a=f[13], b=And_101_1, out=fAndOut13);
	And(a=f[14], b=And_101_1, out=fAndOut14);
	And(a=f[15], b=And_101_1, out=fAndOut15);
	And(a=g[0], b=And_110_1, out=gAndOut0);
	And(a=g[1], b=And_110_1, out=gAndOut1);
	And(a=g[2], b=And_110_1, out=gAndOut2);
	And(a=g[3], b=And_110_1, out=gAndOut3);
	And(a=g[4], b=And_110_1, out=gAndOut4);
	And(a=g[5], b=And_110_1, out=gAndOut5);
	And(a=g[6], b=And_110_1, out=gAndOut6);
	And(a=g[7], b=And_110_1, out=gAndOut7);
	And(a=g[8], b=And_110_1, out=gAndOut8);
	And(a=g[9], b=And_110_1, out=gAndOut9);
	And(a=g[10], b=And_110_1, out=gAndOut10);
	And(a=g[11], b=And_110_1, out=gAndOut11);
	And(a=g[12], b=And_110_1, out=gAndOut12);
	And(a=g[13], b=And_110_1, out=gAndOut13);
	And(a=g[14], b=And_110_1, out=gAndOut14);
	And(a=g[15], b=And_110_1, out=gAndOut15);
	And(a=h[0], b=And_111_1, out=hAndOut0);
	And(a=h[1], b=And_111_1, out=hAndOut1);
	And(a=h[2], b=And_111_1, out=hAndOut2);
	And(a=h[3], b=And_111_1, out=hAndOut3);
	And(a=h[4], b=And_111_1, out=hAndOut4);
	And(a=h[5], b=And_111_1, out=hAndOut5);
	And(a=h[6], b=And_111_1, out=hAndOut6);
	And(a=h[7], b=And_111_1, out=hAndOut7);
	And(a=h[8], b=And_111_1, out=hAndOut8);
	And(a=h[9], b=And_111_1, out=hAndOut9);
	And(a=h[10], b=And_111_1, out=hAndOut10);
	And(a=h[11], b=And_111_1, out=hAndOut11);
	And(a=h[12], b=And_111_1, out=hAndOut12);
	And(a=h[13], b=And_111_1, out=hAndOut13);
	And(a=h[14], b=And_111_1, out=hAndOut14);
	And(a=h[15], b=And_111_1, out=hAndOut15);
}
