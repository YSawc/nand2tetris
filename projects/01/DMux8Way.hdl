// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
	Not(in=sel[0], out=NotSel_000_0);
	Not(in=sel[1], out=NotSel_000_1);
	Not(in=sel[2], out=NotSel_000_2);
	Not(in=sel[1], out=NotSel_001_1);
	Not(in=sel[2], out=NotSel_001_2);
	Not(in=sel[0], out=NotSel_010_0);
	Not(in=sel[2], out=NotSel_010_2);
	Not(in=sel[2], out=NotSel_011_2);
	Not(in=sel[0], out=NotSel_100_0);
	Not(in=sel[1], out=NotSel_100_1);
	Not(in=sel[1], out=NotSel_101_1);
	Not(in=sel[0], out=NotSel_110_0);
	And(a=NotSel_000_0, b=NotSel_000_1, out=And_000_0);
	And(a=sel[0], b=NotSel_001_1, out=And_001_0);
	And(a=NotSel_010_0, b=sel[1], out=And_010_0);
	And(a=sel[0], b=sel[1], out=And_011_0);
	And(a=NotSel_100_0, b=NotSel_100_1, out=And_100_0);
	And(a=sel[0], b=NotSel_101_1, out=And_101_0);
	And(a=NotSel_110_0, b=sel[1], out=And_110_0);
	And(a=sel[0], b=sel[1], out=And_111_0);
	And(a=And_000_0, b=NotSel_000_2, out=And_000_1);
	And(a=And_001_0, b=NotSel_001_2, out=And_001_1);
	And(a=And_010_0, b=NotSel_010_2, out=And_010_1);
	And(a=And_011_0, b=NotSel_011_2, out=And_011_1);
	And(a=And_100_0, b=sel[2], out=And_100_1);
	And(a=And_101_0, b=sel[2], out=And_101_1);
	And(a=And_110_0, b=sel[2], out=And_110_1);
	And(a=And_111_0, b=sel[2], out=And_110_1);
}
