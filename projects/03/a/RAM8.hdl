// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address, a=aDMux8Way, b=bDMux8Way, c=cDMux8Way, d=dDMux8Way,
			e=eDMux8Way, f=fDMux8Way, g=gDMux8Way, h=hDMux8Way);
	Register(in=in, load=aDMux8Way, out=aResister);
	Register(in=in, load=bDMux8Way, out=bResister);
	Register(in=in, load=cDMux8Way, out=cResister);
	Register(in=in, load=dDMux8Way, out=dResister);
	Register(in=in, load=eDMux8Way, out=eResister);
	Register(in=in, load=fDMux8Way, out=fResister);
	Register(in=in, load=gDMux8Way, out=gResister);
	Register(in=in, load=hDMux8Way, out=hResister);
	Mux8Way16(a=aResister, b=bResister, c=cResister, d=dResister,
			e=eResister, f=fResister, g=gResister, h=hResister,
			sel=address, out=out);
}
